{"meta":{"title":"苓茗的杂货铺","subtitle":"Tsundoku,买来的书竟然都没有看过呀。","description":null,"author":"ZJ Liu","url":"http://liuzijian.top","root":"/"},"pages":[],"posts":[{"title":"读书笔记","slug":"算法4读书笔记","date":"2020-10-04T16:00:00.000Z","updated":"2020-10-05T13:51:34.650Z","comments":true,"path":"2020/10/05/算法4读书笔记/","link":"","permalink":"http://liuzijian.top/2020/10/05/算法4读书笔记/","excerpt":"","text":"算法4应该是很多前辈推荐的一本算法入门书了，因为这本书是以Java为基础语言的，所以本书会假定读者没有Java基础，会以一章节的内容来大概梳理一下这门优秀的面向对象语言知识。然后开始以入门排序算法的介绍一章节，来让我们先了解这些基础算法内容，但是我看的主要是堆排，快排，归并排这三种，其中的原地归并排序是先需要了解手摇算法这个为前提，要不然很容易整懵了，本书很多这些地方，说是入门书，其实很多的名词都要有一定的了解到。这是我目前学习的到的地方。 第一章，第二章20201005 算法4读书笔记​ ​ Java的基础部分，包括：原始数据类型，语句（声明语句，赋值语句，条件语句，循环语句），数组，静态方法，字符串等一系列快速浏览了一遍。 基础的二分查找，作为本书开头的第一个高效率和广泛应用的查找算法。 二分查找1234567891011121314public int rank(int key,int[] a,int left,int right) &#123; if(left &gt; right) &#123; return -1; &#125; int mid = left + (right - left) / 2; if(a[mid] &gt; key) &#123; return rank(key,a,left,mid - 1); &#125;else if(a[mid] &lt; key) &#123; return rank(key,a,mid + 1,right); &#125;else &#123; return mid; &#125; &#125; 思考问题：​ 二分法的变形 字符串，判断是否为回文串：123456789public boolean isPalindrome(String s) &#123; int N = s.length(); for(int i = 0;i &lt; N / 2;i++) &#123; if(s.charAt(i) != s.charAt(N-i-1)) &#123; return false; &#125; &#125; return true; &#125; 思考问题：​ 回文串的变形题 重写equals方法模板：12345678910public boolean equals(Object x) &#123; if(this == x) return true; if(x == null) return false; if(this.getClass() != x.getClass()) return false; Holiday that = (Holiday)x; if(this.day != that.day) return false; if(this.month != that.day) return false; if(this.year != that.year) return false; return true; &#125; 思考问题：​ 重写equal是在什么情况下，为什么要重写，重写的意义在哪。 归并排序","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://liuzijian.top/categories/读书笔记/"}],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://liuzijian.top/tags/读书笔记/"}]}]}