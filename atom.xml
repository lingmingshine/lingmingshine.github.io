<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苓茗的杂货铺</title>
  
  <subtitle>Tsundoku,买来的书竟然都没有看过呀。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liuzijian.top/"/>
  <updated>2020-10-05T13:51:34.650Z</updated>
  <id>http://liuzijian.top/</id>
  
  <author>
    <name>ZJ Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>读书笔记</title>
    <link href="http://liuzijian.top/2020/10/05/%E7%AE%97%E6%B3%954%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://liuzijian.top/2020/10/05/算法4读书笔记/</id>
    <published>2020-10-04T16:00:00.000Z</published>
    <updated>2020-10-05T13:51:34.650Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>算法4应该是很多前辈推荐的一本算法入门书了，因为这本书是以Java为基础语言的，所以本书会假定读者没有Java基础，会以一章节的内容来大概梳理一下这门优秀的面向对象语言知识。然后开始以入门排序算法的介绍一章节，来让我们先了解这些基础算法内容，但是我看的主要是堆排，快排，归并排这三种，其中的原地归并排序是先需要了解手摇算法这个为前提，要不然很容易整懵了，本书很多这些地方，说是入门书，其实很多的名词都要有一定的了解到。这是我目前学习的到的地方。                                                                                                                                        第一章，第二章20201005</p></blockquote><h4 id="算法4读书笔记"><a href="#算法4读书笔记" class="headerlink" title="算法4读书笔记"></a>算法4读书笔记</h4><p>​                                                                                                                                                    </p><p>​    Java的基础部分，包括：原始数据类型，语句（声明语句，赋值语句，条件语句，循环语句），数组，静态方法，字符串等一系列快速浏览了一遍。</p><p>基础的二分查找，作为本书开头的第一个高效率和广泛应用的查找算法。</p><h5 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rank</span><span class="params">(<span class="keyword">int</span> key,<span class="keyword">int</span>[] a,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid] &gt; key) &#123;</span><br><span class="line">            <span class="keyword">return</span> rank(key,a,left,mid - <span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[mid] &lt; key) &#123;</span><br><span class="line">            <span class="keyword">return</span> rank(key,a,mid + <span class="number">1</span>,right);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="思考问题："><a href="#思考问题：" class="headerlink" title="思考问题："></a>思考问题：</h6><p>​    二分法的变形</p><h5 id="字符串，判断是否为回文串："><a href="#字符串，判断是否为回文串：" class="headerlink" title="字符串，判断是否为回文串："></a>字符串，判断是否为回文串：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N / <span class="number">2</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i) != s.charAt(N-i-<span class="number">1</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="思考问题：-1"><a href="#思考问题：-1" class="headerlink" title="思考问题："></a>思考问题：</h6><p>​    回文串的变形题</p><h5 id="重写equals方法模板："><a href="#重写equals方法模板：" class="headerlink" title="重写equals方法模板："></a>重写equals方法模板：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span> == x) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getClass() != x.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Holiday that = (Holiday)x;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.day != that.day) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.month != that.day) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.year != that.year) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="思考问题：-2"><a href="#思考问题：-2" class="headerlink" title="思考问题："></a>思考问题：</h6><p>​    重写equal是在什么情况下，为什么要重写，重写的意义在哪。</p><h5 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;算法4应该是很多前辈推荐的一本算法入门书了，因为这本书是以Java为基础语言的，所以本书会假定读者没有Java基础，会以一章节的内容来大概梳理一下这门优秀的面向对象语言知识。然后开始以入门排序算法的介绍一章节，来让我们先了解这些基础算法内容，但是我
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://liuzijian.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://liuzijian.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
